{"version":3,"sources":["../../../../src/api/routes/travel/travels.js"],"names":["Router","TravelService","UserService","YuyuidConfig","YuyuidError","formidable","v2","cloudinary","BodyResponse","Travel","MixedMiddlewares","route","app","use","get","protectLogin","req","res","next","token","GetToken","data","UserLoaded","user","id","json","message","body","status","e","post","create","put","update","err","travel","all","query","internal","error","success","single","params","likes","getLikes","discuss","getDiscuss"],"mappings":"AAAA,SAAQA,MAAR,QAAqB,SAArB;AACA,SAAQC,aAAR,EAAuBC,WAAvB,QAAyC,kBAAzC;AACA,SAAQC,YAAR,QAA2B,gBAA3B;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAAQC,MAAMC,UAAd,QAA+B,YAA/B;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,SAAQC,MAAR,QAAqB,gBAArB;AACA,SAAQC,gBAAR,QAA+B,qBAA/B;;AAEA,MAAMC,QAAQX,QAAd;;AAEA,gBAAgBY,GAAD,IAAS;AACpBA,QAAIC,GAAJ,CAAQ,GAAR,EAAaF,KAAb;;AAEAA,UAAMG,GAAN,CAAU,QAAV,EAAoBJ,iBAAiBK,YAAjB,CAA8B,CAA9B,CAApB,EAAsD,OAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,KAA0B;AAC5E,YAAI;AACA,kBAAMC,QAAQ,MAAMjB,YAAYkB,QAAZ,CAAqBJ,GAArB,CAApB;AACA,kBAAMK,OAAO,MAAMnB,YAAYoB,UAAZ,CAAuBN,IAAIO,IAAJ,CAASC,EAAhC,CAAnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAOP,IAAIQ,IAAJ,CAAS,EAACC,SAAS,qBAAV,EAAiCL,MAAKL,IAAIW,IAA1C,EAAT,EAA0DC,MAA1D,CAAiE,GAAjE,CAAP;AACH,SAbD,CAaE,OAAOC,CAAP,EAAU;AACR,mBAAOX,KAAKW,CAAL,CAAP;AACH;AACJ,KAjBD;;AAmBA;;;;;AAKAlB,UAAMmB,IAAN,CAAW,SAAX,EAAsBpB,iBAAiBK,YAAjB,CAA8B,CAA9B,CAAtB,EAAyDd,cAAc8B,MAAvE;;AAEApB,UAAMqB,GAAN,CAAU,SAAV,EAAqBtB,iBAAiBK,YAAjB,CAA8B,CAA9B,CAArB,EAAuDd,cAAcgC,MAArE;;AAEAtB,UAAMG,GAAN,CAAU,MAAV,EAAkB,OAAOE,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,KAA0B;AACxC,YAAI;AACA,kBAAM,CAACgB,GAAD,EAAMC,MAAN,IAAgB,MAAMlC,cAAcmC,GAAd,CAAkBpB,IAAIqB,KAAtB,CAA5B;AACA,gBAAIH,GAAJ,EAAS,MAAM9B,YAAYkC,QAAZ,CAAqB,mBAArB,CAAN;AACT,mBAAOrB,IAAIW,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB,EAACc,OAAM,KAAP,EAAab,SAAS,kBAAtB,EAAyCc,SAAQ,IAAjD,EAAsDnB,MAAKc,MAA3D,EAArB,CAAP;AAEH,SALD,CAKE,OAAON,CAAP,EAAU;AACR,kBAAMX,KAAKW,CAAL,CAAN;AACH;AACJ,KATD;;AAWAlB,UAAMG,GAAN,CAAU,MAAV,EAAkBJ,iBAAiBK,YAAjB,CAA8B,CAA9B,CAAlB,EAAmD,OAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,KAA0B;AACzE,YAAI;AACA,kBAAM,EAACqB,KAAD,EAAOlB,IAAP,EAAYK,OAAZ,KAAuB,MAAMzB,cAAcwC,MAAd,CAAqBzB,IAAI0B,MAAzB,CAAnC;;AAEA,gBAAIH,KAAJ,EAAW,MAAMnC,YAAYkC,QAAZ,CAAqB,mBAArB,CAAN;AACX,kBAAMK,QAAQ,MAAM1C,cAAc2C,QAAd,CAAuBvB,KAAKG,EAA5B,CAApB;AACA,kBAAMqB,UAAU,MAAM5C,cAAc6C,UAAd,CAAyBzB,KAAKG,EAA9B,CAAtB;;AAEA,mBAAOP,IAAIQ,IAAJ,CAAS;AACZC,yBAAS,SADG;AAEZL,sBAAM;AACFc,4BAAOd,IADL;AAEFsB,2BAAOA,MAAMA,KAAN,GAAaA,MAAMA,KAAnB,GAA4B,EAFjC;AAGFE,6BAASA,QAAQA,OAAR,GAAkBA,QAAQA,OAA1B,GAAoC;AAH3C;AAFM,aAAT,EAOJjB,MAPI,CAOG,GAPH,CAAP;AAQH,SAfD,CAeE,OAAOM,GAAP,EAAY;AACV,mBAAOhB,KAAKgB,GAAL,CAAP;AACH;AACJ,KAnBD;AAsBH,CAhED","file":"travels.js","sourcesContent":["import {Router} from 'express'\r\nimport {TravelService, UserService} from \"@yuyuid/services\";\r\nimport {YuyuidConfig} from \"@yuyuid/config\";\r\nimport YuyuidError from \"@yuyuid/exception\";\r\nimport formidable from \"formidable\";\r\nimport {v2 as cloudinary} from \"cloudinary\";\r\nimport BodyResponse from \"../../../lib/handler/body-response\";\r\nimport {Travel} from \"@yuyuid/models\";\r\nimport {MixedMiddlewares} from \"@yuyuid/middlewares\";\r\n\r\nconst route = Router()\r\n\r\nexport default (app) => {\r\n    app.use('/', route)\r\n\r\n    route.get('/likes', MixedMiddlewares.protectLogin[0], async (req, res, next) => {\r\n        try {\r\n            const token = await UserService.GetToken(req)\r\n            const data = await UserService.UserLoaded(req.user.id)\r\n            // return res.json({\r\n            //     message:\"User has been found\",\r\n            //     success: true,\r\n            //\r\n            //     data:{\r\n            //         token,\r\n            //         ...data,\r\n            //     }\r\n            // }).status(200);\r\n            return res.json({message: \"Create Successfully\", data:req.body}).status(200)\r\n        } catch (e) {\r\n            return next(e)\r\n        }\r\n    })\r\n\r\n    /**\r\n     * [ CREATE TRAVEL ]\r\n     * @url {{END_POINT}}/travel/create\r\n     *\r\n     */\r\n    route.post('/create', MixedMiddlewares.protectLogin[0],  TravelService.create)\r\n\r\n    route.put('/update', MixedMiddlewares.protectLogin[0], TravelService.update)\r\n\r\n    route.get('/all', async (req, res, next) => {\r\n        try {\r\n            const [err, travel] = await TravelService.all(req.query)\r\n            if (err) throw YuyuidError.internal('error get travel ')\r\n            return res.status(200).json({error:false,message: \"get Successfully\",success:true,data:travel})\r\n\r\n        } catch (e) {\r\n            throw next(e)\r\n        }\r\n    })\r\n\r\n    route.get('/:id', MixedMiddlewares.protectLogin[0],async (req, res, next) => {\r\n        try {\r\n            const {error,data,message} = await TravelService.single(req.params)\r\n\r\n            if (error) throw YuyuidError.internal('failed get travel')\r\n            const likes = await TravelService.getLikes(data.id)\r\n            const discuss = await TravelService.getDiscuss(data.id)\r\n\r\n            return res.json({\r\n                message: \"success\",\r\n                data: {\r\n                    travel:data,\r\n                    likes: likes.likes ?likes.likes :  [],\r\n                    discuss: discuss.discuss ? discuss.discuss : []\r\n                }\r\n            }).status(200)\r\n        } catch (err) {\r\n            return next(err)\r\n        }\r\n    })\r\n\r\n\r\n}\r\n"]}