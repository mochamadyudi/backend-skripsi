{"version":3,"sources":["../../../../src/api/routes/admin/index.js"],"names":["Router","YuyuidConfig","MixedMiddlewares","jwt","require","drive","auth","req","res","next","headers","authorization","split","token","decoded","verify","jwtSecret","user","err","status","json","message","app"],"mappings":"AAAA,SAASA,MAAT,QAAuB,SAAvB;;AAEA,SAAQC,YAAR,QAA2B,gBAA3B;AACA,SAAQC,gBAAR,QAA+B,qBAA/B;AACA,MAAMC,MAAMC,QAAQ,cAAR,CAAZ;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAGA,MAAMC,OAAO,CAACC,GAAD,EAAKC,GAAL,EAASC,IAAT,KAAiB;AAC1B,QAAI;AACA;AACA,YACKF,IAAIG,OAAJ,CAAYC,aAAZ,IAA6BJ,IAAIG,OAAJ,CAAYC,aAAZ,CAA0BC,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,MAA4C,OAA1E,IACCL,IAAIG,OAAJ,CAAYC,aAAZ,IAA6BJ,IAAIG,OAAJ,CAAYC,aAAZ,CAA0BC,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,MAA4C,QAF9E,EAGE;AACE,kBAAMC,QAAQN,IAAIG,OAAJ,CAAYC,aAAZ,CAA0BC,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CAAd;;AAEA,kBAAME,UAAUX,IAAIY,MAAJ,CAAWF,KAAX,EAAiBZ,aAAae,SAA9B,CAAhB;AACA;AACA;AACAT,gBAAIU,IAAJ,GAAWH,QAAQG,IAAnB;AACAR;AACH;AACJ,KAdD,CAcE,OAAOS,GAAP,EAAY;AACVV,YAAIW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,mBAAX,EAArB;AACH;AACJ,CAlBD;AAmBA,gBAAe,MAAK;AAChB,UAAMC,MAAMtB,QAAZ;AACA;AACAK,UAAMiB,GAAN;AACA,WAAOA,GAAP;AACH,CALD","file":"index.js","sourcesContent":["import { Router } from 'express'\r\n\r\nimport {YuyuidConfig} from \"@yuyuid/config\";\r\nimport {MixedMiddlewares} from \"@yuyuid/middlewares\";\r\nconst jwt = require(\"jsonwebtoken\");\r\nimport drive from \"./drive\"\r\n\r\n\r\nconst auth = (req,res,next)=> {\r\n    try {\r\n        //Check if there isn't a token\r\n        if (\r\n            (req.headers.authorization && req.headers.authorization.split(\" \")[0] === \"Token\") ||\r\n            (req.headers.authorization && req.headers.authorization.split(\" \")[0] === \"Bearer\")\r\n        ) {\r\n            const token = req.headers.authorization.split(\" \")[1]\r\n\r\n            const decoded = jwt.verify(token,YuyuidConfig.jwtSecret);\r\n            // console.log(decoded,token)\r\n            // console.log(decoded)\r\n            req.user = decoded.user;\r\n            next();\r\n        }\r\n    } catch (err) {\r\n        res.status(401).json({ message: \"Token isnt valid!\" });\r\n    }\r\n}\r\nexport default ()=> {\r\n    const app = Router();\r\n    // app.use(auth);\r\n    drive(app)\r\n    return app;\r\n}\r\n"]}