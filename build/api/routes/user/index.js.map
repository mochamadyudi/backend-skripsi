{"version":3,"sources":["../../../../src/api/routes/user/index.js"],"names":["Router","profile","Permissions","YuyuidConfig","jwt","require","auth","req","res","next","headers","authorization","split","token","decoded","verify","jwtSecret","user","err","status","json","message","app","use"],"mappings":"AAAA;AACA,SAASA,MAAT,QAAuB,SAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,SAAQC,YAAR,QAA2B,gBAA3B;AACA;AACA,MAAMC,MAAMC,QAAQ,cAAR,CAAZ;AACA,MAAMC,OAAO,CAACC,GAAD,EAAKC,GAAL,EAASC,IAAT,KAAiB;AAC1B,QAAI;AACJ;AACA,YACKF,IAAIG,OAAJ,CAAYC,aAAZ,IAA6BJ,IAAIG,OAAJ,CAAYC,aAAZ,CAA0BC,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,MAA4C,OAA1E,IACCL,IAAIG,OAAJ,CAAYC,aAAZ,IAA6BJ,IAAIG,OAAJ,CAAYC,aAAZ,CAA0BC,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,MAA4C,QAF9E,EAGE;AACE,kBAAMC,QAAQN,IAAIG,OAAJ,CAAYC,aAAZ,CAA0BC,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CAAd;;AAEA,kBAAME,UAAUV,IAAIW,MAAJ,CAAWF,KAAX,EAAiBV,aAAaa,SAA9B,CAAhB;AACA;AACA;AACAT,gBAAIU,IAAJ,GAAWH,QAAQG,IAAnB;AACAR;AACH;AACA,KAdD,CAcE,OAAOS,GAAP,EAAY;AACVV,YAAIW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,mBAAX,EAArB;AACH;AACJ,CAlBD;AAmBA,gBAAe,MAAK;AAChB,UAAMC,MAAMtB,QAAZ;AACAsB,QAAIC,GAAJ,CAAQjB,IAAR;AACAL,YAAQqB,GAAR;AACApB,gBAAYoB,GAAZ;;AAEA,WAAOA,GAAP;AACH,CAPD","file":"index.js","sourcesContent":["// import { MixedMiddlewares } from \"@yuyuid/middlewares\"\r\nimport { Router } from 'express'\r\nimport profile from './profile'\r\nimport Permissions from '../permissions/roles/index'\r\nimport {YuyuidConfig} from \"@yuyuid/config\";\r\n// import RouteUser from './users'\r\nconst jwt = require(\"jsonwebtoken\");\r\nconst auth = (req,res,next)=> {\r\n    try {\r\n    //Check if there isn't a token\r\n    if (\r\n        (req.headers.authorization && req.headers.authorization.split(\" \")[0] === \"Token\") ||\r\n        (req.headers.authorization && req.headers.authorization.split(\" \")[0] === \"Bearer\")\r\n    ) {\r\n        const token = req.headers.authorization.split(\" \")[1]\r\n\r\n        const decoded = jwt.verify(token,YuyuidConfig.jwtSecret);\r\n        // console.log(decoded,token)\r\n        // console.log(decoded)\r\n        req.user = decoded.user;\r\n        next();\r\n    }\r\n    } catch (err) {\r\n        res.status(401).json({ message: \"Token isnt valid!\" });\r\n    }\r\n}\r\nexport default ()=> {\r\n    const app = Router();\r\n    app.use(auth);\r\n    profile(app)\r\n    Permissions(app)\r\n\r\n    return app;\r\n}\r\n"]}