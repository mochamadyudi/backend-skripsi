{"version":3,"sources":["../../../../src/api/routes/user/profile.js"],"names":["Router","UserService","formidable","cloudinary","require","v2","BodyResponse","route","app","use","get","req","res","next","token","GetToken","user","profile","UserLoaded","id","json","message","success","data","status","e","put","form","IncomingForm","parse","err","fields","files","uploader","upload","file","filepath","upload_preset","categorization","auto_tagging","error","result","updateProfile","body","then","response","catch"],"mappings":"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","file":"profile.js","sourcesContent":["import { Router } from 'express'\r\nimport {UserService} from \"@yuyuid/services\";\r\nimport formidable  from 'formidable';\r\n\r\nconst cloudinary = require('cloudinary').v2\r\nimport BodyResponse from \"../../../lib/handler/body-response\";\r\n\r\nconst route = Router()\r\n\r\nexport default (app)=> {\r\n    app.use('/',route)\r\n\r\n    route.get('/profile' , async (req,res,next)=> {\r\n        try{\r\n            const token = await UserService.GetToken(req)\r\n            const {user,profile} = await UserService.UserLoaded(req.user.id)\r\n            return res.json({\r\n                message:\"User has been found\",\r\n                success: true,\r\n                data:{\r\n                    token,\r\n                    user,\r\n                    profile\r\n                }\r\n            }).status(200);\r\n        }catch(e){\r\n            return next(e)\r\n        }\r\n    })\r\n\r\n    route.put('/profile/avatar', async (req,res,next)=> {\r\n        try{\r\n            const  form = new formidable.IncomingForm();\r\n            return await form.parse(req, async function (err, fields, files) {\r\n                await cloudinary.uploader.upload(files.file.filepath, {\r\n                    upload_preset: \"default-preset-aku\",\r\n                    categorization: \"google_tagging\",\r\n                    auto_tagging: 0.6\r\n                }, (error, result) => {\r\n\r\n                    return res.status(200)\r\n                        .json(new BodyResponse({data: result}))\r\n                });\r\n            });\r\n        }catch(e){\r\n            return res.status(500).json({error:true,message:e.message})\r\n        }\r\n        // return res.json({...req.body})\r\n    })\r\n\r\n    route.put('/profile/update', async (req,res,next)=>{\r\n        try{\r\n            await UserService.updateProfile({id:req.user.id,data:req.body})\r\n                .then((response)=> {\r\n                    return res.status(response.status ? response.status : 200).json(response)\r\n                })\r\n                .catch((err)=> {\r\n                    return res.status(500).json(new BodyResponse({error:true,status:500,message:err.message}))\r\n                })\r\n\r\n\r\n        }catch(e){\r\n            return res.status(500).json(new BodyResponse({error:true,message:e.message}))\r\n        }\r\n    })\r\n\r\n}\r\n"]}