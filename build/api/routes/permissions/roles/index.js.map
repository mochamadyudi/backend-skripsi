{"version":3,"sources":["../../../../../src/api/routes/permissions/roles/index.js"],"names":["Router","BodyResponse","PermissionsValidator","PermissionsService","cloudinary","require","v2","route","app","use","post","RolesValidator","req","res","next","newRoles","Create","body","status","json","err","error","message","get"],"mappings":"AAAA,SAASA,MAAT,QAAuB,SAAvB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAAQC,oBAAR,QAAmC,2BAAnC;AACA,SAAQC,kBAAR,QAAiC,0CAAjC;;AAEA,MAAMC,aAAaC,QAAQ,YAAR,EAAsBC,EAAzC;;AAEA,MAAMC,QAAQP,QAAd;;AAEA,gBAAgBQ,GAAD,IAAQ;AACnBA,QAAIC,GAAJ,CAAQ,cAAR,EAAuBF,KAAvB;;AAEAA,UAAMG,IAAN,CAAW,eAAX,EAA4BR,qBAAqBS,cAAjD,EAAkE,OAAOC,GAAP,EAAWC,GAAX,EAAeC,IAAf,KAAuB;AACrF,YAAG;AACC,kBAAMC,WAAW,MAAMZ,mBAAmBa,MAAnB,CAA0BJ,IAAIK,IAA9B,CAAvB;AACA,mBAAOJ,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBJ,QAArB,CAAP;AACH,SAHD,CAGC,OAAMK,GAAN,EAAU;AACP,mBAAOP,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,IAAIlB,YAAJ,CAAiB;AACzCoB,uBAAM,IADmC;AAEzCC,yBAASF,IAAIE;AAF4B,aAAjB,CAArB,CAAP;AAIH;AACJ,KAVD;AAWAf,UAAMgB,GAAN,CAAU,SAAV,EAAqB,OAAOX,GAAP,EAAWC,GAAX,EAAeC,IAAf,KAAuB;AACxC,eAAOD,IAAIM,IAAJ,CAAS,EAACE,OAAM,KAAP,EAAaC,SAAQ,UAArB,EAAT,CAAP;AACH,KAFD;AAGH,CAjBD","file":"index.js","sourcesContent":["import { Router } from 'express'\r\nimport BodyResponse from \"../../../../lib/handler/body-response\";\r\nimport {PermissionsValidator} from \"../../../../lib/validator\";\r\nimport {PermissionsService} from \"../../../../services/permissions.service\";\r\n\r\nconst cloudinary = require('cloudinary').v2\r\n\r\nconst route = Router()\r\n\r\nexport default (app)=> {\r\n    app.use('/permissions',route)\r\n\r\n    route.post('/roles/create', PermissionsValidator.RolesValidator , async (req,res,next)=> {\r\n        try{\r\n            const newRoles = await PermissionsService.Create(req.body)\r\n            return res.status(200).json(newRoles)\r\n        }catch(err){\r\n            return res.status(500).json(new BodyResponse({\r\n                error:true,\r\n                message: err.message\r\n            }))\r\n        }\r\n    })\r\n    route.get('/roles/', async (req,res,next)=> {\r\n        return res.json({error:false,message:\"Berhasil\"})\r\n    })\r\n}\r\n"]}